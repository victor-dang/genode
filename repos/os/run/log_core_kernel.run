if {
	![have_spec hw] &&
	![have_spec nova]
} {
	puts "Platform is unsupported."
	exit 0
}

build "core init drivers/timer server/vfs server/fs_log app/log_core_kernel"

create_boot_directory

install_config {
<config>
	<parent-provides>
		<service name="LOG"/>
		<service name="RAM"/>
		<service name="ROM"/>
		<service name="PD"/>
		<service name="CPU"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> </any-service>
	</default-route>

	<default caps="100"/>

	<start name="timer">
		<resource name="CPU" quantum="10"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="vfs">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="File_system"/></provides>
		<config>
			<vfs>
				<!-- be careful to avoid endless output loop for core.log -->
				<dir name="log_core_kernel"> <ram name="core.log"/> </dir>
				<dir name="log_core_kernel"> <log name="kernel.log"/> </dir>
			</vfs>
			<policy label_prefix="fs_log" writeable="yes"/>
		</config>
	</start>

	<start name="fs_log">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="LOG"/></provides>
		<config>
			<policy label="log_core_kernel -> core"/>
			<policy label="log_core_kernel -> kernel"/>
		</config>
		<route>
			<service name="File_system"> <child name="vfs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="log_core_kernel">
		<resource name="RAM" quantum="10M"/>
		<config/>
		<route>
			<service name="ROM" unscoped_label="log_core_kernel"> <parent/> </service>
			<service name="ROM" unscoped_label="ld.lib.so"> <parent/> </service>
			<service name="ROM" label="kernel_log"> <parent/> </service>
			<service name="ROM" label="core_log"> <parent/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="LOG" label="kernel"> <child name="fs_log"/> </service>
			<service name="LOG" label="core"> <child name="fs_log"/> </service>
			<service name="PD"> <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
		</route>
	</start>
</config>
}

build_boot_image "core init timer ld.lib.so vfs fs_log log_core_kernel"

run_genode_until forever
