if {![have_spec x86] || [have_spec linux]} {
	puts "Platform is unsupported."
	exit 0
}

create_boot_directory

import_from_depot genodelabs/src/[base_src] \
                  genodelabs/pkg/sculpt \
                  genodelabs/src/e2fsprogs \
                  genodelabs/src/vbox5-nova \
                  genodelabs/src/libiconv \
                  genodelabs/src/nic_router \
                  genodelabs/src/acpica \
                  genodelabs/src/bsd_audio_drv \
                  genodelabs/src/mixer

install_config {
<config prio_levels="4"> <!-- set prio_levels to 4 -->
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="TRACE"/>
	</parent-provides>

	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<default caps="100"/>

	<resource name="RAM" preserve="2M"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="top">
		<resource name="RAM" quantum="2M"/>
		<config period_ms="30000"/>
	</start>

	<start name="trace_subject_reporter" >
		<resource name="RAM" quantum="24M"/>
		<route>
			<service name="ROM" label="config">
				<child name="config_rom" label="trace_subject_reporter.config"/> </service>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="report_rom">
		<binary name="report_rom"/>
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="no">
			<policy label="leitzentrale_config -> leitzentrale"
			        report="global_keys_handler -> leitzentrale"/>
			<policy label="leitzentrale_config -> reset"
			        report="global_keys_handler -> reset"/>
			<policy label="runtime.state" report="runtime -> state"/>
			<policy label="leitzentrale -> trace_subjects"
			        report="trace_subject_reporter -> trace_subjects"/>
			<policy label="pointer -> hover" report="nitpicker -> hover"/>
			<policy label="pointer -> xray"
			        report="global_keys_handler -> leitzentrale"/>
			<policy label="pointer -> shape" report="shape"/>
			<policy label="drivers -> capslock" report="global_keys_handler -> capslock"/>
			<policy label="runtime -> capslock" report="global_keys_handler -> capslock"/>
			<policy label="drivers -> numlock"  report="global_keys_handler -> numlock"/>
			<policy label="nit_user_focus -> clicked" report="nitpicker -> clicked"/>
			<policy label="nit_focus -> focus" report="nit_user_focus -> focus"/>
			<policy label="nit_focus -> leitzentrale"
			        report="global_keys_handler -> leitzentrale"/>
		</config>
	</start>

	<start name="report_logger" priority="-3">
		<binary name="report_rom"/>
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes"/>
	</start>

	<start name="config_fs" caps="200">
		<binary name="ram_fs"/>
		<resource name="RAM" quantum="10M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<content>
				<rom name="fb_drv.config"/>
				<rom name="drivers.config"/>
				<rom name="nitpicker.config"/>
				<rom name="input_filter.config"/>
				<rom name="en_us.chargen"/>
				<rom name="de.chargen"/>
				<rom name="numlock_remap.config"/>
				<rom name="vimrc"/>
				<rom name="leitzentrale.config"/>
				<rom name="wlan.config"/>
				<dir name="runtime">
					<rom name="empty_runtime.config"    as="config"/>
					<rom name="empty_runtime.config"    as="empty.config" />
					<rom name="block_runtime.config"    as="block.config" />
					<rom name="load_runtime.config"     as="load.config" />
					<rom name="fs_runtime.config"       as="fs.config" />
					<rom name="linux_runtime.config"    as="linux.config" />
					<rom name="usb_fs_runtime.config"   as="usb_fs.config" />
					<rom name="download_runtime.config" as="download.config" />
				</dir>
				<dir name="subinit">
					<rom name="default_fs_subinit.config"   as="default_fs.config" />
					<rom name="default_nic_subinit.config"  as="default_nic.config" />
					<rom name="default_noux_subinit.config" as="default_noux.config" />
				</dir>
				<inline name="trace_subject_reporter.config">
					<config period_ms="1000">
						<report activity="yes" affinity="yes"/>
					</config>
				</inline>
				<inline name="system">
					<!-- supported 'state' values are "reset", "poweroff" -->
					<system state=""/>
				</inline>
			</content>
			<policy label="config_rom -> " root="/" />
			<policy label="rw" root="/" writeable="yes" />
		</config>
	</start>

	<start name="config_rom">
		<binary name="fs_rom"/>
		<resource name="RAM" quantum="10M"/>
		<provides> <service name="ROM"/> </provides>
		<route>
			<service name="File_system"> <child name="config_fs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="report_fs">
		<binary name="ram_fs"/>
		<resource name="RAM" quantum="16M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<content>
				<inline name="log">### start ###</inline>
			</content>
			<policy label="fs_report -> "    root="/" writeable="yes" />
			<policy label="log_terminal -> " root="/" writeable="yes" />
			<policy label="ro" root="/" />
		</config>
	</start>

	<start name="log_terminal">
		<binary name="file_terminal"/>
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Terminal"/> </provides>
		<config>
			<default-policy filename="log" />
			<vfs> <dir name="dev"> <log/> </dir> <fs/> </vfs>
			<libc stdout="/dev/log"/>
		</config>
		<route>
			<service name="File_system"> <child name="report_fs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="log">
		<binary name="terminal_log"/>
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="LOG"/> </provides>
		<config/>
		<route>
			<service name="Terminal"> <child name="log_terminal"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="fs_report">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> </provides>
		<config> <vfs> <fs/> </vfs> </config>
		<route>
			<service name="File_system"> <child name="report_fs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="drivers" caps="3000" priority="-1">
		<resource name="RAM" quantum="66M" constrain_phys="yes"/>
		<binary name="init"/>
		<route>
			<service name="LOG"> <child name="log"/> </service>
			<service name="ROM" label="config">
				<child name="config_rom" label="drivers.config"/> </service>
			<service name="ROM" label="input_filter.config">  <child name="config_rom"/> </service>
			<service name="ROM" label="numlock_remap.config"> <child name="config_rom"/> </service>
			<service name="ROM" label_suffix=".chargen">      <child name="config_rom"/> </service>
			<service name="ROM" label_suffix=".remap">        <child name="config_rom"/> </service>
			<service name="ROM" label="capslock"> <child name="report_rom"/> </service>
			<service name="ROM" label="numlock">  <child name="report_rom"/> </service>
			<service name="ROM" label="system">   <child name="config_rom"/> </service>
			<service name="ROM" label_suffix="fb_drv.config"> <child name="config_rom"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="Report"> <child name="fs_report"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
			<service name="Block"/>
			<service name="File_system"/>
			<service name="Usb"/>
			<service name="Platform"/>
		</provides>
	</start>

	<start name="nitpicker" caps="1000">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nitpicker"/></provides>
		<route>
			<service name="ROM" label="config">
				<child name="config_rom" label="nitpicker.config"/> </service>
			<service name="ROM" label="focus">
				<child name="nit_focus"/> </service>
			<service name="Report" label="keystate">
				<child name="report_logger"/> </service>
			<service name="Report">      <child name="report_rom"/> </service>
			<service name="Framebuffer"> <child name="drivers"/>    </service>
			<service name="Input">       <child name="drivers"/>    </service>
			<service name="Timer">       <child name="timer"/>      </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<!-- override user focus when leitzentrale is active -->
	<start name="nit_focus" priority="-1">
		<binary name="rom_filter"/>
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="ROM"/> </provides>
		<config>
			<input name="leitzentrale_enabled" rom="leitzentrale" node="leitzentrale">
				<attribute name="enabled" /> </input>
			<input name="user_focus" rom="focus" node="focus">
				<attribute name="label"/> </input>
			<output node="focus">
				<if>
					<has_value input="leitzentrale_enabled" value="yes" />
					<then>
						<attribute name="label" value="leitzentrale -> control_fader -> "/>
					</then>
					<else>
						<attribute name="label" input="user_focus"/>
					</else>
				</if>
			</output>
		</config>
		<route>
			<service name="ROM" label="leitzentrale"> <child name="report_rom"/> </service>
			<service name="ROM" label="focus">        <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="nit_user_focus" priority="-1">
		<binary name="nit_focus"/>
		<resource name="RAM" quantum="1M"/>
		<config>
			<policy label_prefix="leitzentrale" focus="no"/>
			<default-policy focus="yes"/>
		</config>
		<route>
			<service name="ROM" label="clicked"> <child name="report_rom"/> </service>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="pointer" priority="-1">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Report"/> </provides>
		<config shapes="yes"/>
		<route>
			<service name="Nitpicker"> <child name="nitpicker"/>  </service>
			<service name="ROM" label="hover"> <child name="report_rom"/> </service>
			<service name="ROM" label="xray">  <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="global_keys_handler" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<config>
			<bool name="leitzentrale" initial="yes"/>
			<bool name="reset"        initial="no"/>
			<bool name="capslock"     initial="no"/>
			<bool name="numlock"      initial="no"/>

			<press   name="KEY_F11"      bool="reset"        change="on"/>
			<release name="KEY_F11"      bool="reset"        change="off"/>
			<press   name="KEY_F12"      bool="leitzentrale" change="toggle"/>
			<press   name="KEY_CAPSLOCK" bool="capslock"     change="toggle"/>
			<press   name="KEY_NUMLOCK"  bool="numlock"      change="toggle"/>

			<report name="leitzentrale"> <bool name="leitzentrale"/> </report>
			<report name="reset">        <bool name="reset"/>        </report>
			<report name="capslock">     <bool name="capslock"/>     </report>
			<report name="numlock">      <bool name="numlock"/>      </report>
		</config>
		<route>
			<service name="Report">    <child name="report_rom"/> </service>
			<service name="Nitpicker"> <child name="nitpicker"/>  </service>
			<service name="Timer">     <child name="timer"/>      </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="leitzentrale_config" priority="-2">
		<binary name="rom_filter"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="ROM"/></provides>
		<route>
			<service name="ROM" label="leitzentrale"> <child name="report_rom"/> </service>
			<service name="ROM" label="reset">        <child name="report_rom"/> </service>
			<service name="ROM" label="config">
				<child name="config_rom" label="leitzentrale.config"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="leitzentrale" caps="2000" priority="-2">
		<binary name="init"/>
		<resource name="RAM" quantum="128M"/>
		<route>
			<service name="LOG"> <child name="log"/> </service>
			<service name="ROM" label="config">
				<child name="leitzentrale_config"/> </service>
			<service name="ROM" label="control_noux -> vimrc">
				<child name="config_rom"/> </service>
			<service name="ROM" label="control_noux -> runtime.state">
				<child name="report_rom" label="runtime.state"/> </service>
			<service name="ROM" label="trace_subjects">
				<child name="report_rom"/> </service>
			<service name="Nitpicker"> <child name="nitpicker"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="File_system" label="control_noux -> config">
				<child name="config_fs" label="rw"/> </service>
			<service name="File_system" label="control_noux -> report">
				<child name="report_fs" label="ro"/> </service>
			<service name="File_system" label="control_noux -> drivers">
				<child name="drivers"   label="ro"/> </service>
			<service name="File_system" label="log_noux -> report">
				<child name="report_fs" label="ro"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="rtc_drv" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Rtc"/> </provides>
	</start>

	<start name="runtime" caps="50000" priority="-3">
		<binary name="init"/>
		<resource name="RAM" quantum="12G"/>
		<route>
			<service name="ROM" label="config">
				<child name="config_rom" label="runtime/config"/> </service>
			<service name="ROM" label_prefix="config -> ">
				<child name="config_rom"/> </service>
			<service name="ROM" label_suffix="-> vimrc">
				<child name="config_rom" label="vimrc"/> </service>
			<service name="ROM" label="system">
				<child name="config_rom"/> </service>
			<service name="ROM" label="capslock">
				<child name="report_rom"/> </service>
			<service name="File_system" label="config">
				<child name="config_fs" label="rw"/> </service>
			<service name="File_system" label="report">
				<child name="report_fs" label="ro"/> </service>
			<service name="Block"> <child name="drivers"/> </service>
			<service name="Usb"> <child name="drivers"/> </service>
			<service name="Platform" label_prefix="acpica">
				<child name="drivers" label="acpica"/> </service>
			<service name="Platform"> <child name="drivers"/> </service>
			<service name="Nitpicker" label="backdrop"> <child name="nitpicker" label="backdrop"/> </service>
			<service name="Nitpicker"> <child name="nitpicker"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="Report" label_suffix="-> shape"> <child name="pointer"/> </service>
			<service name="Report" label="state"> <child name="report_rom"/> </service>
			<service name="Report"> <child name="fs_report"/> </service>
			<service name="LOG" label="unlogged"> <parent/> </service>
			<service name="LOG"> <child name="log"/> </service>
			<service name="Rtc"> <child name="rtc_drv"/> </service>
			<service name="IO_MEM"  label_prefix="acpica"> <parent/> </service>
			<service name="IO_PORT" label_prefix="acpica"> <parent/> </service>
			<service name="IRQ"     label_prefix="acpica"> <parent/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

</config>}

foreach file [glob "[genode_dir]/repos/gems/run/sculpt/*.config"] {
	file copy -force $file [run_dir]/genode/ }


#
# Override files normally obtained from depot archive with the most current
# version found in the Genode source tree. This way, we don't need to
# rebuild the corresponding depot archives each time we tweak one of the
# files. This is just a hack to accelerate the work flow.
#

file copy -force [genode_dir]/repos/gems/run/sculpt/vimrc [run_dir]/genode/

file copy -force [genode_dir]/repos/gems/recipes/raw/drivers_managed-pc/drivers.config \
                 [run_dir]/genode/drivers.config

file copy -force [genode_dir]/repos/os/src/server/input_filter/en_us.chargen \
                 [run_dir]/genode/en_us.chargen

file copy -force [genode_dir]/repos/os/src/server/input_filter/de.chargen \
                 [run_dir]/genode/de.chargen

file copy -force [genode_dir]/repos/gems/recipes/raw/drivers_managed-pc/input_filter.config \
                 [run_dir]/genode/input_filter.config

append boot_modules { }

build_boot_image $boot_modules

run_genode_until forever

